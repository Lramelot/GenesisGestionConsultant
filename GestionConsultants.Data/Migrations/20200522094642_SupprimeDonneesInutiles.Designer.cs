// <auto-generated />
using GestionConsultants.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionConsultants.Data.Migrations
{
    [DbContext(typeof(ConsultantContext))]
    [Migration("20200522094642_SupprimeDonneesInutiles")]
    partial class SupprimeDonneesInutiles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionConsultants.Core.Domain.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consultants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Experience = 1,
                            Nom = "Ramelot",
                            Prenom = "Loïc"
                        },
                        new
                        {
                            Id = 2,
                            Experience = 2,
                            Nom = "Nguyen",
                            Prenom = "Duy"
                        },
                        new
                        {
                            Id = 3,
                            Experience = 0,
                            Nom = "Gaa",
                            Prenom = "Corentin"
                        });
                });

            modelBuilder.Entity("GestionConsultants.Core.Domain.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExperienceMinimumRequise")
                        .HasColumnType("int");

                    b.Property<string>("NomEntreprise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RateMaximum")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Missions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperienceMinimumRequise = 1,
                            NomEntreprise = "Forem",
                            RateMaximum = 700.0
                        },
                        new
                        {
                            Id = 2,
                            ExperienceMinimumRequise = 0,
                            NomEntreprise = "SPW",
                            RateMaximum = 650.0
                        });
                });

            modelBuilder.Entity("GestionConsultants.Core.Domain.MissionConsultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CommissionEntreprise")
                        .HasColumnType("float");

                    b.Property<int>("ConsultantId")
                        .HasColumnType("int");

                    b.Property<bool>("EstActif")
                        .HasColumnType("bit");

                    b.Property<int>("MissionId")
                        .HasColumnType("int");

                    b.Property<string>("PosteInterne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId");

                    b.HasIndex("MissionId");

                    b.ToTable("MissionsConsultants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommissionEntreprise = 10.0,
                            ConsultantId = 1,
                            EstActif = false,
                            MissionId = 1,
                            PosteInterne = "Lead Developer",
                            Rate = 500.0
                        },
                        new
                        {
                            Id = 2,
                            CommissionEntreprise = 5.0,
                            ConsultantId = 2,
                            EstActif = true,
                            MissionId = 1,
                            PosteInterne = "Architecte",
                            Rate = 600.0
                        },
                        new
                        {
                            Id = 3,
                            CommissionEntreprise = 15.0,
                            ConsultantId = 3,
                            EstActif = false,
                            MissionId = 1,
                            PosteInterne = "Développzye",
                            Rate = 450.0
                        },
                        new
                        {
                            Id = 4,
                            CommissionEntreprise = 15.0,
                            ConsultantId = 1,
                            EstActif = true,
                            MissionId = 2,
                            PosteInterne = "Lead Developer",
                            Rate = 475.0
                        },
                        new
                        {
                            Id = 5,
                            CommissionEntreprise = 15.0,
                            ConsultantId = 3,
                            EstActif = true,
                            MissionId = 2,
                            PosteInterne = "Développeur",
                            Rate = 450.0
                        });
                });

            modelBuilder.Entity("GestionConsultants.Core.Domain.MissionConsultant", b =>
                {
                    b.HasOne("GestionConsultants.Core.Domain.Consultant", "Consultant")
                        .WithMany("Missions")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionConsultants.Core.Domain.Mission", "Mission")
                        .WithMany("MissionsConsultants")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
